{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/app/%5Blocale%5D/components/admin/courseForm.tsx"],"sourcesContent":["\n// components/admin/CourseForm.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Course } from '@/lib/db/schema';\n\ninterface CourseFormProps {\n  courseId?: number;\n  initialData?: Course;\n}\n\ninterface FormData {\n  title: string;\n  description: string;\n  price: number;\n  difficultyLevel: 'beginner' | 'intermediate' | 'advanced';\n  estimatedDuration: number;\n  imageUrl: string;\n}\n\nexport default function CourseForm({ courseId, initialData }: CourseFormProps) {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n  const [formData, setFormData] = useState<FormData>({\n    title: initialData?.title || '',\n    description: initialData?.description || '',\n    price: initialData ? initialData.price / 100 : 0,\n    difficultyLevel: initialData?.difficultyLevel as 'beginner' | 'intermediate' | 'advanced' || 'beginner',\n    estimatedDuration: initialData?.estimatedDuration || 0,\n    imageUrl: initialData?.imageUrl || '',\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const url = courseId ? `/api/admin/courses/${courseId}` : '/api/admin/courses';\n      const method = courseId ? 'PATCH' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        router.push('/admin/courses');\n        router.refresh();\n      } else {\n        setError(data.error || 'Erreur lors de la sauvegarde');\n      }\n    } catch (err) {\n      setError('Erreur de connexion');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'number' ? parseFloat(value) || 0 : value,\n    }));\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">\n          {courseId ? 'Modifier le cours' : 'Nouveau cours'}\n        </h1>\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-6\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Titre du cours *\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleChange}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Ex: Introduction à React\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              rows={4}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Décrivez ce que les étudiants vont apprendre...\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Prix (€) *\n              </label>\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleChange}\n                min=\"0\"\n                step=\"0.01\"\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"difficultyLevel\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Niveau de difficulté\n              </label>\n              <select\n                id=\"difficultyLevel\"\n                name=\"difficultyLevel\"\n                value={formData.difficultyLevel}\n                onChange={handleChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"beginner\">Débutant</option>\n                <option value=\"intermediate\">Intermédiaire</option>\n                <option value=\"advanced\">Avancé</option>\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"estimatedDuration\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Durée estimée (minutes)\n            </label>\n            <input\n              type=\"number\"\n              id=\"estimatedDuration\"\n              name=\"estimatedDuration\"\n              value={formData.estimatedDuration}\n              onChange={handleChange}\n              min=\"0\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Ex: 120\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"imageUrl\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              URL de l'image de couverture\n            </label>\n            <input\n              type=\"url\"\n              id=\"imageUrl\"\n              name=\"imageUrl\"\n              value={formData.imageUrl}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"https://example.com/image.jpg\"\n            />\n            {formData.imageUrl && (\n              <div className=\"mt-2\">\n                <img\n                  src={formData.imageUrl}\n                  alt=\"Aperçu\"\n                  className=\"h-32 w-48 object-cover rounded-lg\"\n                  onError={(e) => {\n                    e.currentTarget.style.display = 'none';\n                  }}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-end space-x-4 pt-6\">\n            <button\n              type=\"button\"\n              onClick={() => router.back()}\n              className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors\"\n            >\n              Annuler\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n            >\n              {loading ? 'Sauvegarde...' : courseId ? 'Mettre à jour' : 'Créer le cours'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AACA,kCAAkC;;;;;AAGlC;AACA;;;AAHA;;;AAoBe,SAAS,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAmB;;IAC3E,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;QACjD,OAAO,aAAa,SAAS;QAC7B,aAAa,aAAa,eAAe;QACzC,OAAO,cAAc,YAAY,KAAK,GAAG,MAAM;QAC/C,iBAAiB,aAAa,mBAA+D;QAC7F,mBAAmB,aAAa,qBAAqB;QACrD,UAAU,aAAa,YAAY;IACrC;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,MAAM,WAAW,CAAC,mBAAmB,EAAE,UAAU,GAAG;YAC1D,MAAM,SAAS,WAAW,UAAU;YAEpC,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC;gBACA,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,OAAO,IAAI,CAAC;gBACZ,OAAO,OAAO;YAChB,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM;QACtC,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE,SAAS,WAAW,WAAW,UAAU,IAAI;YACvD,CAAC;IACH;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BACX,WAAW,sBAAsB;;;;;;gBAGnC,uBACC,6LAAC;oBAAI,WAAU;8BACZ;;;;;;8BAIL,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAQ,WAAU;8CAA+C;;;;;;8CAGhF,6LAAC;oCACC,MAAK;oCACL,IAAG;oCACH,MAAK;oCACL,OAAO,SAAS,KAAK;oCACrB,UAAU;oCACV,QAAQ;oCACR,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAc,WAAU;8CAA+C;;;;;;8CAGtF,6LAAC;oCACC,IAAG;oCACH,MAAK;oCACL,OAAO,SAAS,WAAW;oCAC3B,UAAU;oCACV,MAAM;oCACN,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAQ,WAAU;sDAA+C;;;;;;sDAGhF,6LAAC;4CACC,MAAK;4CACL,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,KAAK;4CACrB,UAAU;4CACV,KAAI;4CACJ,MAAK;4CACL,QAAQ;4CACR,WAAU;4CACV,aAAY;;;;;;;;;;;;8CAIhB,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAkB,WAAU;sDAA+C;;;;;;sDAG1F,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,eAAe;4CAC/B,UAAU;4CACV,WAAU;;8DAEV,6LAAC;oDAAO,OAAM;8DAAW;;;;;;8DACzB,6LAAC;oDAAO,OAAM;8DAAe;;;;;;8DAC7B,6LAAC;oDAAO,OAAM;8DAAW;;;;;;;;;;;;;;;;;;;;;;;;sCAK/B,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAoB,WAAU;8CAA+C;;;;;;8CAG5F,6LAAC;oCACC,MAAK;oCACL,IAAG;oCACH,MAAK;oCACL,OAAO,SAAS,iBAAiB;oCACjC,UAAU;oCACV,KAAI;oCACJ,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAW,WAAU;8CAA+C;;;;;;8CAGnF,6LAAC;oCACC,MAAK;oCACL,IAAG;oCACH,MAAK;oCACL,OAAO,SAAS,QAAQ;oCACxB,UAAU;oCACV,WAAU;oCACV,aAAY;;;;;;gCAEb,SAAS,QAAQ,kBAChB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,KAAK,SAAS,QAAQ;wCACtB,KAAI;wCACJ,WAAU;wCACV,SAAS,CAAC;4CACR,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG;wCAClC;;;;;;;;;;;;;;;;;sCAMR,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,MAAK;oCACL,SAAS,IAAM,OAAO,IAAI;oCAC1B,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,MAAK;oCACL,UAAU;oCACV,WAAU;8CAET,UAAU,kBAAkB,WAAW,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxE;GAtMwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/app/%5Blocale%5D/%28dashboard%29/dashboard/admin/courses/new/page.tsx"],"sourcesContent":["'use client';\nimport React, { useState } from 'react';\nimport CourseForm from '@/app/[locale]/components/admin/courseForm';\n\nexport default function AdminPage() {\n\n  return (\n    <section className=\"flex-1 p-4 lg:p-8\">\n      <h1 className=\"text-lg lg:text-2xl font-medium text-gray-900 mb-6\">\n        Course Administration\n      </h1>\n\n        <div className=\"mt-8\">\n          <CourseForm></CourseForm>\n        </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IAEtB,qBACE,6LAAC;QAAQ,WAAU;;0BACjB,6LAAC;gBAAG,WAAU;0BAAqD;;;;;;0BAIjE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,0JAAA,CAAA,UAAU;;;;;;;;;;;;;;;;AAIrB;KAbwB","debugId":null}}]
}