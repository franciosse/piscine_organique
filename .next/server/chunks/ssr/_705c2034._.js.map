{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/i18n/routing.ts"],"sourcesContent":["import {defineRouting} from 'next-intl/routing';\n \nexport const routing = defineRouting({\n  // A list of all locales that are supported\n  locales: ['en', 'fr' , 'es', 'eu'],\n \n  // Used when no locale matches\n  defaultLocale: 'fr'\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,icAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;QAAO;QAAM;KAAK;IAElC,8BAA8B;IAC9B,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/i18n/request.ts"],"sourcesContent":["import {getRequestConfig} from 'next-intl/server';\nimport {hasLocale} from 'next-intl';\nimport {routing} from './routing';\n \nexport default getRequestConfig(async ({requestLocale}) => {\n  // Typically corresponds to the `[locale]` segment\n  const requested = await requestLocale;\n  const locale = hasLocale(routing.locales, requested)\n    ? requested\n    : routing.defaultLocale;\n \n  return {\n    locale,\n    messages: (await import(`../messages/${locale}.json`)).default\n  };\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;uCAEe,CAAA,GAAA,ydAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAC,aAAa,EAAC;IACpD,kDAAkD;IAClD,MAAM,YAAY,MAAM;IACxB,MAAM,SAAS,CAAA,GAAA,+PAAA,CAAA,YAAS,AAAD,EAAE,+GAAA,CAAA,UAAO,CAAC,OAAO,EAAE,aACtC,YACA,+GAAA,CAAA,UAAO,CAAC,aAAa;IAEzB,OAAO;QACL;QACA,UAAU,CAAC;;;;;;;;;;;;;;;;;kBAAa,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IAChE;AACF","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/app/%5Blocale%5D/%28dashboard%29/client-layout.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/[locale]/(dashboard)/client-layout.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/[locale]/(dashboard)/client-layout.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/app/%5Blocale%5D/%28dashboard%29/client-layout.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/[locale]/(dashboard)/client-layout.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/[locale]/(dashboard)/client-layout.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/app/%5Blocale%5D/%28dashboard%29/layout.tsx"],"sourcesContent":["// app/[locale]/layout.tsx\nimport { notFound } from 'next/navigation';\nimport { NextIntlClientProvider, hasLocale } from 'next-intl';\nimport { routing } from '@/i18n/routing';\nimport ClientLayout from './client-layout';\n\nexport default async function LocaleLayout({ \n  children, \n  params \n}: {\n  children: React.ReactNode;\n  params: Promise<{ locale: string }>; // Typage correct pour Next.js 15+\n}) {\n  // Attendre les params avant de les utiliser\n  const { locale } = await params;\n\n  if (!hasLocale(routing.locales, locale)) {\n    notFound();\n  }\n\n  return (\n    <NextIntlClientProvider locale={locale}>\n      <ClientLayout>{children}</ClientLayout>\n    </NextIntlClientProvider>\n  );\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAEe,eAAe,aAAa,EACzC,QAAQ,EACR,MAAM,EAIP;IACC,4CAA4C;IAC5C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEzB,IAAI,CAAC,CAAA,GAAA,+PAAA,CAAA,YAAS,AAAD,EAAE,+GAAA,CAAA,UAAO,CAAC,OAAO,EAAE,SAAS;QACvC,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,6XAAC,ieAAA,CAAA,yBAAsB;QAAC,QAAQ;kBAC9B,cAAA,6XAAC,uJAAA,CAAA,UAAY;sBAAE;;;;;;;;;;;AAGrB","debugId":null}}]
}