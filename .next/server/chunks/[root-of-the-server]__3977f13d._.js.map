{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/lib/auth/session.ts"],"sourcesContent":["import { compare, hash } from 'bcryptjs';\nimport { SignJWT, jwtVerify } from 'jose';\nimport { cookies } from 'next/headers';\nimport { NewUser } from '@/lib/db/schema';\n\nconst key = new TextEncoder().encode(process.env.AUTH_SECRET);\nconst SALT_ROUNDS = 10;\n\nexport async function hashPassword(password: string) {\n  return hash(password, SALT_ROUNDS);\n}\n\nexport async function comparePasswords(\n  plainTextPassword: string,\n  hashedPassword: string\n) {\n  return compare(plainTextPassword, hashedPassword);\n}\n\ntype SessionData = {\n  user: { id: number };\n  expires: string;\n};\n\nexport async function signToken(payload: SessionData) {\n  return await new SignJWT(payload)\n    .setProtectedHeader({ alg: 'HS256' })\n    .setIssuedAt()\n    .setExpirationTime('1 day from now')\n    .sign(key);\n}\n\nexport async function verifyToken(input: string) {\n  const { payload } = await jwtVerify(input, key, {\n    algorithms: ['HS256'],\n  });\n  return payload as SessionData;\n}\n\nexport async function getSession() {\n  const session = (await cookies()).get('session')?.value;\n  if (!session) return null;\n  return await verifyToken(session);\n}\n\nexport async function setSession(user: NewUser) {\n  const expiresInOneDay = new Date(Date.now() + 24 * 60 * 60 * 1000);\n  const session: SessionData = {\n    user: { id: user.id! },\n    expires: expiresInOneDay.toISOString(),\n  };\n  const encryptedSession = await signToken(session);\n  (await cookies()).set('session', encryptedSession, {\n    expires: expiresInOneDay,\n    httpOnly: true,\n    secure: true,\n    sameSite: 'lax',\n  });\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AAAA;AACA;;;;AAGA,MAAM,MAAM,IAAI,cAAc,MAAM,CAAC,QAAQ,GAAG,CAAC,WAAW;AAC5D,MAAM,cAAc;AAEb,eAAe,aAAa,QAAgB;IACjD,OAAO,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE,UAAU;AACxB;AAEO,eAAe,iBACpB,iBAAyB,EACzB,cAAsB;IAEtB,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,mBAAmB;AACpC;AAOO,eAAe,UAAU,OAAoB;IAClD,OAAO,MAAM,IAAI,uMAAA,CAAA,UAAO,CAAC,SACtB,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,WAAW,GACX,iBAAiB,CAAC,kBAClB,IAAI,CAAC;AACV;AAEO,eAAe,YAAY,KAAa;IAC7C,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,yMAAA,CAAA,YAAS,AAAD,EAAE,OAAO,KAAK;QAC9C,YAAY;YAAC;SAAQ;IACvB;IACA,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,UAAU,CAAC,MAAM,CAAA,GAAA,8QAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,YAAY;IAClD,IAAI,CAAC,SAAS,OAAO;IACrB,OAAO,MAAM,YAAY;AAC3B;AAEO,eAAe,WAAW,IAAa;IAC5C,MAAM,kBAAkB,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK;IAC7D,MAAM,UAAuB;QAC3B,MAAM;YAAE,IAAI,KAAK,EAAE;QAAE;QACrB,SAAS,gBAAgB,WAAW;IACtC;IACA,MAAM,mBAAmB,MAAM,UAAU;IACzC,CAAC,MAAM,CAAA,GAAA,8QAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,WAAW,kBAAkB;QACjD,SAAS;QACT,UAAU;QACV,QAAQ;QACR,UAAU;IACZ;AACF","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/i18n/routing.ts"],"sourcesContent":["import {defineRouting} from 'next-intl/routing';\n \nexport const routing = defineRouting({\n  // A list of all locales that are supported\n  locales: ['en', 'fr' , 'es', 'ba'],\n \n  // Used when no locale matches\n  defaultLocale: 'fr'\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,icAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;QAAO;QAAM;KAAK;IAElC,8BAA8B;IAC9B,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///media/franciosse/Data/Repos/piscine_organique/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { signToken, verifyToken } from '@/lib/auth/session';\nimport createMiddleware from 'next-intl/middleware';\nimport {routing} from '@/i18n/routing';\n\nconst protectedRoutes = '/dashboard';\n\nexport default createMiddleware(routing);\n\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const sessionCookie = request.cookies.get('session');\n  const isProtectedRoute = pathname.startsWith(protectedRoutes);\n\n  if (isProtectedRoute && !sessionCookie) {\n    return NextResponse.redirect(new URL('/sign-in', request.url));\n  }\n\n  let res = NextResponse.next();\n\n  if (sessionCookie && request.method === 'GET') {\n    try {\n      const parsed = await verifyToken(sessionCookie.value);\n      const expiresInOneDay = new Date(Date.now() + 24 * 60 * 60 * 1000);\n\n      res.cookies.set({\n        name: 'session',\n        value: await signToken({\n          ...parsed,\n          expires: expiresInOneDay.toISOString()\n        }),\n        httpOnly: true,\n        secure: true,\n        sameSite: 'lax',\n        expires: expiresInOneDay\n      });\n    } catch (error) {\n      console.error('Error updating session:', error);\n      res.cookies.delete('session');\n      if (isProtectedRoute) {\n        return NextResponse.redirect(new URL('/sign-in', request.url));\n      }\n    }\n  }\n\n  return res;\n}\n\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n  runtime: 'nodejs'\n};\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AACA;;;;;AAEA,MAAM,kBAAkB;uCAET,CAAA,GAAA,qZAAA,CAAA,UAAgB,AAAD,EAAE,+GAAA,CAAA,UAAO;AAGhC,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC;IAC1C,MAAM,mBAAmB,SAAS,UAAU,CAAC;IAE7C,IAAI,oBAAoB,CAAC,eAAe;QACtC,OAAO,6QAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;IAC9D;IAEA,IAAI,MAAM,6QAAA,CAAA,eAAY,CAAC,IAAI;IAE3B,IAAI,iBAAiB,QAAQ,MAAM,KAAK,OAAO;QAC7C,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE,cAAc,KAAK;YACpD,MAAM,kBAAkB,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK;YAE7D,IAAI,OAAO,CAAC,GAAG,CAAC;gBACd,MAAM;gBACN,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,YAAS,AAAD,EAAE;oBACrB,GAAG,MAAM;oBACT,SAAS,gBAAgB,WAAW;gBACtC;gBACA,UAAU;gBACV,QAAQ;gBACR,UAAU;gBACV,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,IAAI,OAAO,CAAC,MAAM,CAAC;YACnB,IAAI,kBAAkB;gBACpB,OAAO,6QAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;YAC9D;QACF;IACF;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;IAC9D,SAAS;AACX","debugId":null}}]
}